-- Auto-generated by generate_schema.py

-- Table: financial_metrics
CREATE TABLE IF NOT EXISTS financial_metrics (
  company_id INT,
  period_id INT NOT NULL,
  period_id INT NOT NULL,
  company_name TEXT,
  line_item TEXT,
  period_label TEXT,
  period_type TEXT,
  start_date DATE,
  end_date DATE,
  value NUMERIC,
  value_type TEXT,
  frequency TEXT,
  currency TEXT,
  source_file TEXT,
  source_page INT,
  source_type TEXT,
  notes TEXT,
  statement_type TEXT,
  category TEXT,
  PRIMARY KEY (company_id, line_item, period_label)
);

-- Table: line_item_definitions
CREATE TABLE IF NOT EXISTS line_item_definitions (
  id INT PRIMARY KEY,
  name TEXT NOT NULL,
  aliases TEXT[],
  description TEXT
);

-- Seed line_item_definitions
INSERT INTO line_item_definitions (id, name, aliases, description) VALUES
  (11001, 'Revenue', '{sales,income,turnover,total_revenue,rev}'::TEXT[], 'Total revenue from operations'),
  (11002, 'Gross Profit', '{gross_profit,grossincome,gross income}'::TEXT[], 'Revenue minus cost of goods sold'),
  (11003, 'EBITDA', '{earnings_before_interest,earnings_before_taxes,earnings_before_interest_taxes,operating_profit}'::TEXT[], 'Earnings before interest, taxes, depreciation, amortization')
ON CONFLICT (id) DO NOTHING;

-- Table: companies
CREATE TABLE IF NOT EXISTS companies (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  industry TEXT,
  created_at TIMESTAMP DEFAULT NOW() NOT NULL,
  updated_at TIMESTAMP DEFAULT NOW() NOT NULL
);

ALTER TABLE companies ADD CONSTRAINT companies_name_key UNIQUE (name);
INSERT INTO companies (id, name, industry)
VALUES (99, 'Example Company', 'Example Industry')
ON CONFLICT (name) DO NOTHING;

-- Table: periods
CREATE TABLE IF NOT EXISTS periods (
  id SERIAL PRIMARY KEY,
  period_type TEXT NOT NULL,
  period_label TEXT NOT NULL,
  start_date DATE,
  end_date DATE,
  created_at TIMESTAMP DEFAULT NOW() NOT NULL,
  updated_at TIMESTAMP DEFAULT NOW() NOT NULL
);

ALTER TABLE periods ADD CONSTRAINT periods_period_label_period_type_key UNIQUE (period_label, period_type);
-- Table: line_item_definitions
CREATE TABLE IF NOT EXISTS line_item_definitions (
  id INT PRIMARY KEY,
  name TEXT NOT NULL,
  aliases TEXT[],
  description TEXT
);

ALTER TABLE line_item_definitions ADD CONSTRAINT line_item_definitions_name_key UNIQUE (name);
-- Table: financial_metrics
CREATE TABLE IF NOT EXISTS financial_metrics (
  company_id INT NOT NULL,
  line_item TEXT NOT NULL,
  period_label TEXT NOT NULL,
  value NUMERIC,
  value_type TEXT,
  frequency TEXT,
  currency TEXT,
  source_file TEXT,
  source_page INT,
  notes TEXT
);

-- Table: derived_metrics
CREATE TABLE IF NOT EXISTS derived_metrics (
  id SERIAL PRIMARY KEY,
  base_metric_id INT NOT NULL,
  calculation_type TEXT,
  company_id INT NOT NULL,
  period_label TEXT NOT NULL,
  calculated_value NUMERIC,
  unit TEXT,
  source_ids TEXT,
  calculation_note TEXT,
  corroboration_status TEXT,
  created_at TIMESTAMP DEFAULT NOW() NOT NULL,
  updated_at TIMESTAMP DEFAULT NOW() NOT NULL
);

ALTER TABLE derived_metrics ADD CONSTRAINT derived_metrics_base_metric_id_company_id_period_label_calculation_type_key UNIQUE (base_metric_id, company_id, period_label, calculation_type);
-- Table: question_templates
CREATE TABLE IF NOT EXISTS question_templates (
  id SERIAL PRIMARY KEY,
  line_item TEXT,
  template TEXT
);

-- Table: questions
CREATE TABLE IF NOT EXISTS questions (
  id SERIAL PRIMARY KEY,
  company_id INT,
  period_label TEXT,
  line_item TEXT,
  question_template_id INT,
  generated_at TIMESTAMP DEFAULT NOW()
);

-- Table: live_questions
CREATE TABLE IF NOT EXISTS live_questions (
  id SERIAL PRIMARY KEY,
  derived_metric_id INT,
  status TEXT,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

-- Table: question_logs
CREATE TABLE IF NOT EXISTS question_logs (
  id SERIAL PRIMARY KEY,
  live_question_id INT,
  changed_on TIMESTAMP DEFAULT NOW()
);

-- Table: generated_reports
CREATE TABLE IF NOT EXISTS generated_reports (
  id SERIAL PRIMARY KEY,
  generated_on TIMESTAMP DEFAULT NOW(),
  company_id INT,
  filter_type TEXT,
  report_file_path TEXT
);
