# config/tables.yaml
# --------------------------------------------------------------------------
# PURPOSE:
#   Top-level YAML file describing all core relational tables for the financial analytics pipeline.
#   - Used by scripts/generate_schema.py to generate schema/001_financial_schema.sql
#   - Central, transparent definition: all analytics, governance, and reporting tables live here.
#
#   Each table entry describes:
#     - table name
#     - ordered columns, types, constraints, defaults
#     - unique constraints, foreign keys
#     - seed data
#     - indexes (for performance, analytics)
#
#   All business rules, keys, and analytics structure are YAML-defined.
#
#   Maintainers: Edit this file, NOT SQL/migrations, for all DB changes!
# --------------------------------------------------------------------------

tables:
  - name: companies
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: name
        type: TEXT
        constraints: [NOT NULL]
      - name: industry
        type: TEXT
      - name: created_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
      - name: updated_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
    unique_constraints:
      - [name]
    seed:
      - |
        INSERT INTO companies (name, industry)
        VALUES ('Example Company', 'Example Industry')
        ON CONFLICT (name) DO NOTHING;

  - name: periods
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: period_type
        type: TEXT
        constraints: [NOT NULL]
      - name: period_label
        type: TEXT
        constraints: [NOT NULL]
      - name: start_date
        type: DATE
      - name: end_date
        type: DATE
      - name: created_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
      - name: updated_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
    unique_constraints:
      - [period_label, period_type]
    seeds:
      - sql: |
          WITH
            today AS (
              SELECT date_trunc('month', now())::date AS current_month
            ),
            boundaries AS (
              SELECT
                (current_month - INTERVAL '20 years')::date AS start_month,
                current_month AS end_month
              FROM today
            ),
            monthly AS (
              SELECT
                to_char(m, 'Mon YYYY') AS period_label,
                'Monthly'       AS period_type,
                m               AS start_date,
                (m + INTERVAL '1 month' - INTERVAL '1 day')::date AS end_date
              FROM boundaries,
                   generate_series(boundaries.start_month,
                                   boundaries.end_month,
                                   INTERVAL '1 month') AS m
            ),
            quarterly AS (
              SELECT
                to_char(q, '\"Q\"Q YYYY') AS period_label,
                'Quarterly'      AS period_type,
                q                AS start_date,
                (q + INTERVAL '3 months' - INTERVAL '1 day')::date AS end_date
              FROM boundaries,
                   generate_series(boundaries.start_month,
                                   boundaries.end_month,
                                   INTERVAL '3 months') AS q
            ),
            yearly AS (
              SELECT
                to_char(y, 'YYYY') AS period_label,
                'Yearly'       AS period_type,
                y              AS start_date,
                (y + INTERVAL '1 year' - INTERVAL '1 day')::date AS end_date
              FROM boundaries,
                   generate_series(date_trunc('year', boundaries.start_month),
                                   date_trunc('year', boundaries.end_month),
                                   INTERVAL '1 year') AS y
            ),
            all_p AS (
              SELECT * FROM monthly
              UNION
              SELECT * FROM quarterly
              UNION
              SELECT * FROM yearly
            )
          INSERT INTO periods (period_label, period_type, start_date, end_date, created_at, updated_at)
          SELECT period_label, period_type, start_date, end_date, now(), now()
          FROM all_p
          ON CONFLICT (period_label, period_type) DO NOTHING;

  - name: line_item_definitions
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: name
        type: TEXT
        constraints: [NOT NULL]
      - name: aliases
        type: TEXT[]
      - name: description
        type: TEXT
    unique_constraints:
      - [name]
    seed:
      - |
        INSERT INTO line_item_definitions (name, aliases, description) VALUES
          ('Revenue', '{sales,income,turnover,total_revenue,rev}'::TEXT[], 'Total revenue from operations'),
          ('Gross Profit', '{gross_profit,grossincome,gross income}'::TEXT[], 'Revenue minus cost of goods sold'),
          ('EBITDA', '{earnings_before_interest,earnings_before_taxes,earnings_before_interest_taxes,operating_profit}'::TEXT[], 'Earnings before interest, taxes, depreciation, amortization')
        ON CONFLICT (name) DO NOTHING;

  - name: financial_metrics
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: company_id
        type: INT
        constraints: [NOT NULL]
      - name: period_id
        type: INT
        constraints: [NOT NULL]
      - name: line_item_id
        type: INT
        constraints: [NOT NULL]
      - name: value
        type: NUMERIC
        constraints: [CHECK (value >= 0)]
      - name: value_type
        type: TEXT
      - name: frequency
        type: TEXT
      - name: currency
        type: TEXT
      - name: source_file
        type: TEXT
      - name: source_page
        type: INT
      - name: source_type
        type: TEXT
      - name: notes
        type: TEXT
      - name: hash
        type: TEXT
      - name: created_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
      - name: updated_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
    unique_constraints:
      - [company_id, period_id, line_item_id]
    foreign_keys:
      - columns: [company_id]
        references: companies(id)
      - columns: [period_id]
        references: periods(id)
      - columns: [line_item_id]
        references: line_item_definitions(id)
    indexes:
      - columns: [company_id, period_id]
      - columns: [company_id]
      - columns: [period_id]

  - name: derived_metrics
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: base_metric_id
        type: INT
        constraints: [NOT NULL]
      - name: calculation_type
        type: TEXT
      - name: company_id
        type: INT
        constraints: [NOT NULL]
      - name: period_id
        type: INT
        constraints: [NOT NULL]
      - name: calculated_value
        type: NUMERIC
      - name: unit
        type: TEXT
      - name: source_ids
        type: INT[]
      - name: calculation_note
        type: TEXT
      - name: corroboration_status
        type: TEXT
      - name: frequency
        type: TEXT
      - name: created_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
      - name: updated_at
        type: TIMESTAMP
        default: NOW()
        constraints: [NOT NULL]
    unique_constraints:
      - [base_metric_id, company_id, period_id, calculation_type]
    foreign_keys:
      - columns: [base_metric_id]
        references: financial_metrics(id)
      - columns: [company_id]
        references: companies(id)
      - columns: [period_id]
        references: periods(id)
    indexes:
      - columns: [company_id, period_id]
      - columns: [base_metric_id]

  - name: question_templates
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: line_item_id
        type: INT
      - name: template
        type: TEXT
    foreign_keys:
      - columns: [line_item_id]
        references: line_item_definitions(id)

  - name: questions
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: company_id
        type: INT
      - name: period_id
        type: INT
      - name: line_item_id
        type: INT
      - name: question_template_id
        type: INT
      - name: generated_at
        type: TIMESTAMP
        default: NOW()
    foreign_keys:
      - columns: [company_id]
        references: companies(id)
      - columns: [period_id]
        references: periods(id)
      - columns: [line_item_id]
        references: line_item_definitions(id)
      - columns: [question_template_id]
        references: question_templates(id)

  - name: live_questions
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: derived_metric_id
        type: INT
      - name: status
        type: TEXT
      - name: created_at
        type: TIMESTAMP
        default: NOW()
      - name: updated_at
        type: TIMESTAMP
        default: NOW()
    foreign_keys:
      - columns: [derived_metric_id]
        references: derived_metrics(id)

  - name: question_logs
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: live_question_id
        type: INT
      - name: changed_on
        type: TIMESTAMP
        default: NOW()
    foreign_keys:
      - columns: [live_question_id]
        references: live_questions(id)

  - name: generated_reports
    columns:
      - name: id
        type: SERIAL
        constraints: [PRIMARY KEY]
      - name: generated_on
        type: TIMESTAMP
        default: NOW()
      - name: company_id
        type: INT
      - name: filter_type
        type: TEXT
      - name: report_file_path
        type: TEXT
    foreign_keys:
      - columns: [company_id]
        references: companies(id)

# --------------------------------------------------------------------------
# END OF FILE
# - To extend: add your next table after the last one as shown above
# - All changes here will flow through to the produced SQL during schema generation
# --------------------------------------------------------------------------
